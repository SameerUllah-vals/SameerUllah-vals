@model DynamicFormMasterMeta
@using static Web.Helpers.ApplicationHelper
<script>

    const data = '@Html.Raw(Json.Serialize(Model.DynamicForm))'
    @if(Model.DynamicFormMaster != null)
    {
        @: const MasterData = '@Html.Raw(Json.Serialize(Model.DynamicFormMaster))'
    }

</script>

<div class="d-flex flex-column-fluid">

    <div id="rawDiv" class="container-xxl">
        <div class="d-flex flex-column flex-lg-row">
            <div class="flex-lg-row-fluid me-lg-15 order-2 order-lg-1 mb-10 mb-lg-0">
                <form class="" asp-controller="Rendering" asp-action="Save" id="DynamicForm" autocomplete="off" 
                      data-ajax-begin="OnFormBegin" data-ajax-complete="OnFormComplete"
                      data-ajax-failure="OnFormFailure" data-ajax-success="OnFormSuccess"
                      data-ajax="true" data-ajax-method="POST" enctype="multipart/form-data">
                    <div class="card card-flush pt-3 mb-5 mb-lg-10">
                        <div class="card-header">

                            <div class="card-title">
                                <h2 class="fw-bolder"><span id="formTitle"></span> Form</h2>
                            </div>

                        </div>

                        <div class="card-body pt-0">
                            <div class="d-flex flex-column mb-15 fv-row">
                                <input type="text" id="formId" name="formId" hidden />
                                <input type="text" id="RowId" name="RowId" hidden />
                                <div class="row" id="master_row">

                                </div>
                            </div>
                            <div id="footer_btn" style="float:right">
                             
                                <button type="button" class="btn btn-primary" onclick="window.history.go(-1)" >Back</button>
                                <button type="reset" class="btn btn-warning " onClick="Reset()">Reset</button>                                
                                <button type="submit" name="button" value="S-N" class="btn btn-success">Save & Redirect</button>
                                <button type="submit" name="button" value="S" class="btn btn-success">Save</button>
                            </div>
                        </div>

                    </div>

                </form>

            </div>


        </div>
    </div>


</div>


@section LinkScriptSection{

    <script>
        @if (ViewBag.PageType == EnumPageType.View)
        {
            @:DisableView();
        }
        let json = JSON.parse(data)
        $("#formTitle").html(json.Title);
        $("#formId").val(json.Id);
        json.DynamicFormInputs.sort(dynamicSort("SequenceOrder")); 
        json.DynamicFormInputs.map(function(record, index){
            console.log(record)
            if (record.Type != "Dropdown") {
                $('#master_row').append(`<div class="d-flex flex-column mb-6 fv-row col-4">
                    <div class="fs-5 fw-bolder form-label mb-3 ">${record.Name}</div>
                                        <input type='${record.Type}' ${record.IsRequired ? "required data-val='true' data-val-required='this field is required.'" : ""} name='d_${record.Id}'/>
                                                ${record.IsRequired ? '<span asp-validation-for="d_' + record.Id + '" class="text-danger"></span>' : ""}
                </div>`)
            }
            else {
                $('#master_row').append(` 
                    <div class="d-flex flex-column mb-6 fv-row col-4" >
                    <div class="fs-5 fw-bolder form-label mb-3 ">
                        ${record.Name}
                     </div>
                        <select name="d_${record.Id}" data-control="select2" ${record.IsRequired ? "data-val='true' data-val-required='this field is required.'" : ""}  class="form-select form-select-solid"  tabindex="-1">
                </select>
                         ${record.IsRequired ? '<span asp-validation-for="d_' + record.Id + '" class="text-danger"></span>' : ""}
                </div>`)
            }
            record.DynamicFormInputAttributes.map(function(attributeRecord, index){
                if (attributeRecord.AttrKey != "id")
                    $(`[name='d_${record.Id}']`).attr(attributeRecord.AttrKey, attributeRecord.AttrValue)
            })
            record.DynamicFormInputDataSources.map(function(dataSourceRecord, index){
                let option = ` <option value="${dataSourceRecord.Key}">
                                ${dataSourceRecord.Value}</option>`
                $(`select[name=d_${record.Id}]`).append(option);
            })
        })       
        $(document).ready(function(){
            if (typeof (MasterData) !== "undefined"){
                let dt_MasterData = JSON.parse(MasterData);
                $("#RowId").val(dt_MasterData.Id);
                $.each(dt_MasterData.DynamicFormMasterDetails, function (index, record) {
                    $(`[name='d_${record.DynamicFormInputId}']`).val(record.DynamicFormInputValue);
                })
                $('select').trigger('change.select2');
            }
            
        })
    </script>
}